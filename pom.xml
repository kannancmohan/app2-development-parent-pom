<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
	<modelVersion>4.0.0</modelVersion>
	<parent>
		<groupId>org.springframework.boot</groupId>
		<artifactId>spring-boot-starter-parent</artifactId>
		<version>3.3.2</version>
		<relativePath /> <!-- lookup parent from repository -->
	</parent>
	<groupId>com.kcm.msp.dev</groupId>
	<artifactId>app2-development-parent-pom</artifactId>
	<version>${revision}</version>
	<name>app2-development-parent-pom</name>
	<packaging>pom</packaging>
	<description>Development parent pom</description>
	<properties>
		<revision>0.0.1-SNAPSHOT</revision>
		<java.version>22</java.version>
		<!-- dependencies -->
		<lombok.version>1.18.34</lombok.version>
		<commons-lang3.version>3.15.0</commons-lang3.version>
		<jakarta.validation-api.version>3.1.0</jakarta.validation-api.version>
		<jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
		<swagger-annotations.version>2.2.22</swagger-annotations.version>
		<!-- plugins-->
		<maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
		<maven-checkstyle-plugin.version>3.4.0</maven-checkstyle-plugin.version>
		<puppycrawl-checkstyle.version>10.17.0</puppycrawl-checkstyle.version>
		<maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
		<exec-maven-plugin.version>3.3.0</exec-maven-plugin.version>
		<spotbugs-maven-plugin.version>4.8.6.2</spotbugs-maven-plugin.version>
		<spotbugs.version>4.8.6</spotbugs.version>
		<openapi-generator-maven-plugin.version>7.7.0</openapi-generator-maven-plugin.version>
		<!-- properties for plugin-->
		<generate-openapi-server-code.inputSpec>
			${project.basedir}/src/main/resources/static/openapi/openapi.yaml</generate-openapi-server-code.inputSpec>
		<generate-openapi-server-code.reactive>false</generate-openapi-server-code.reactive>
		<generate-openapi-server-code.skip>false</generate-openapi-server-code.skip>
		<generate-openapi-client-code.skip>false</generate-openapi-client-code.skip>
		<generate-openapi-client-code.library>resttemplate</generate-openapi-client-code.library>
		<generate-openapi-client-code.inputSpec>
			${project.basedir}/src/main/resources/static/openapi/openapi.yaml</generate-openapi-client-code.inputSpec>
	</properties>

	<dependencyManagement>
		<dependencies>
			<!-- Common dependencies -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok</artifactId>
				<version>${lombok.version}</version>
			</dependency>
			<dependency>
				<groupId>org.apache.commons</groupId>
				<artifactId>commons-lang3</artifactId>
				<version>${commons-lang3.version}</version>
			</dependency>
			<!-- dependencies for code generated by openapi-generator-maven-plugin -->
			<dependency>
				<groupId>jakarta.validation</groupId>
				<artifactId>jakarta.validation-api</artifactId>
				<version>${jakarta.validation-api.version}</version>
			</dependency>
			<dependency>
				<groupId>org.openapitools</groupId>
				<artifactId>jackson-databind-nullable</artifactId>
				<version>${jackson-databind-nullable.version}</version>
			</dependency>
			<dependency>
				<groupId>io.swagger.core.v3</groupId>
				<artifactId>swagger-annotations</artifactId>
				<version>${swagger-annotations.version}</version>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<build>
		<pluginManagement>
			<plugins>
				<!-- Java Compiler -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-compiler-plugin</artifactId>
					<version>${maven-compiler-plugin.version}</version>
					<configuration>
						<release>${java.version}</release>
						<source>${java.version}</source>
						<target>${java.version}</target>
					</configuration>
				</plugin>
				<!--  Google checkstyle using maven checkstyle plugin -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-checkstyle-plugin</artifactId>
					<version>${maven-checkstyle-plugin.version}</version>
					<dependencies>
						<dependency>
							<groupId>com.puppycrawl.tools</groupId>
							<artifactId>checkstyle</artifactId>
							<version>${puppycrawl-checkstyle.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<configLocation>google_checks.xml</configLocation>
						<suppressionsLocation>supressions_checkstyle.xml</suppressionsLocation>
						<inputEncoding>UTF-8</inputEncoding>
						<failsOnError>true</failsOnError>
						<consoleOutput>true</consoleOutput>
						<violationSeverity>error</violationSeverity>
					</configuration>
					<executions>
						<execution>
							<id>google-checkstyle</id>
							<phase>validate</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- copy git hooks files from scripts/git-hooks to .git/hooks -->
				<plugin>
					<groupId>org.apache.maven.plugins</groupId>
					<artifactId>maven-resources-plugin</artifactId>
					<version>${maven-resources-plugin.version}</version>
					<executions>
						<execution>
							<id>copy-hooks</id>
							<phase>none</phase>
							<goals>
								<goal>copy-resources</goal>
							</goals>
							<configuration>
								<outputDirectory>${basedir}/.git/hooks</outputDirectory>
								<resources>
									<resource>
										<directory>${basedir}/scripts/git-hooks</directory>
										<includes>
											<include>**/*</include>
										</includes>
									</resource>
								</resources>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- make .git/hooks/commit-msg and .git/hooks/pre-commit executable -->
				<plugin>
					<groupId>org.codehaus.mojo</groupId>
					<artifactId>exec-maven-plugin</artifactId>
					<version>${exec-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>make-hooks-executable</id>
							<phase>none</phase>
							<goals>
								<goal>exec</goal>
							</goals>
							<configuration>
								<executable>chmod</executable>
								<arguments>
									<argument>+x</argument>
									<argument>${basedir}/.git/hooks/commit-msg</argument>
									<argument>${basedir}/.git/hooks/pre-commit</argument>
								</arguments>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- spotbugs plugin -->
				<plugin>
					<groupId>com.github.spotbugs</groupId>
					<artifactId>spotbugs-maven-plugin</artifactId>
					<version>${spotbugs-maven-plugin.version}</version>
					<dependencies>
						<!-- overwrite if you want to specify the version of spotbugs -->
						<dependency>
							<groupId>com.github.spotbugs</groupId>
							<artifactId>spotbugs</artifactId>
							<version>${spotbugs.version}</version>
						</dependency>
					</dependencies>
					<configuration>
						<skip>${spotbugs.skip}</skip>
						<failOnError>true</failOnError>
						<!-- threshold values Low,Medium,High -->
						<threshold>High</threshold>
						<!-- TODO remove FindDeadLocalStores after ignoring spotbugs check on
						generated classes -->
						<!-- to disable bug detector. -->
						<omitVisitors>FindDeadLocalStores</omitVisitors>
					</configuration>
					<executions>
						<execution>
							<id>spotbugs-check</id>
							<phase>verify</phase>
							<goals>
								<goal>check</goal>
							</goals>
						</execution>
					</executions>
				</plugin>
				<!-- openapi code generator -->
				<plugin>
					<groupId>org.openapitools</groupId>
					<artifactId>openapi-generator-maven-plugin</artifactId>
					<version>${openapi-generator-maven-plugin.version}</version>
					<executions>
						<execution>
							<id>generate-openapi-server-code</id>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<skip>${generate-openapi-server-code.skip}</skip>
								<!--<inputSpec>https://petstore3.swagger.io/api/v3/openapi.yaml</inputSpec>-->
								<inputSpec>${generate-openapi-server-code.inputSpec}</inputSpec>
								<generatorName>spring</generatorName>
								<library>spring-boot</library>
								<apiPackage>
									${project.groupId}.${generate-openapi-server-code.package}.api</apiPackage>
								<modelPackage>
									${project.groupId}.${generate-openapi-server-code.package}.models</modelPackage>
								<supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
								<output>${project.build.directory}/generated-sources</output>
								<configOptions>
									<useSpringBoot3>true</useSpringBoot3>
									<reactive>${generate-openapi-server-code.reactive}</reactive>
									<sourceFolder>src/main/java/</sourceFolder>
									<delegatePattern>true</delegatePattern>
									<interfaceOnly>true</interfaceOnly>
									<useTags>true</useTags>
									<!--<additionalModelTypeAnnotations>@lombok.Builder</additionalModelTypeAnnotations>-->
								</configOptions>
							</configuration>
						</execution>
						<execution>
							<id>generate-openapi-client-code</id>
							<goals>
								<goal>generate</goal>
							</goals>
							<configuration>
								<skip>${generate-openapi-client-code.skip}</skip>
								<inputSpec>${generate-openapi-client-code.inputSpec}</inputSpec>
								<generatorName>java</generatorName>
								<library>${generate-openapi-client-code.library}</library>
								<apiPackage>
									${project.groupId}.${generate-openapi-client-code.package}.api</apiPackage>
								<modelPackage>
									${project.groupId}.${generate-openapi-client-code.package}.models</modelPackage>
								<output>${project.build.directory}/generated-sources</output>
								<!-- set generateApis to 'false' if we want to generate model
								classes only-->
								<generateApis>true</generateApis>
								<generateApiDocumentation>false</generateApiDocumentation>
								<generateApiTests>false</generateApiTests>
								<generateModels>true</generateModels>
								<generateModelDocumentation>false</generateModelDocumentation>
								<generateModelTests>false</generateModelTests>
								<!--<generateSupportingFiles>true</generateSupportingFiles>-->
								<!--<supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>-->
								<configOptions>
									<useJakartaEe>true</useJakartaEe>
									<sourceFolder>src/main/java</sourceFolder>
									<useTags>true</useTags>
									<interfaceOnly>true</interfaceOnly>
									<dateLibrary>java8</dateLibrary>
								</configOptions>
								<!-- set this to override variables defined in spec. use ',' for
								passing multiple values -->
								<serverVariableOverrides>
									${generate-openapi-client-code.overrideServerVariables}</serverVariableOverrides>
							</configuration>
						</execution>
					</executions>
				</plugin>
				<!-- springboot -->
				<plugin>
					<groupId>org.springframework.boot</groupId>
					<artifactId>spring-boot-maven-plugin</artifactId>
				</plugin>
			</plugins>
		</pluginManagement>
		<!-- Add plugins that needs to be executed automatically by child project -->
		<plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<executions>
					<execution>
						<id>copy-hooks</id>
						<phase>initialize</phase>
					</execution>
				</executions>
			</plugin>
			<plugin>
				<groupId>org.codehaus.mojo</groupId>
				<artifactId>exec-maven-plugin</artifactId>
				<executions>
					<execution>
						<id>make-hooks-executable</id>
						<phase>process-resources</phase>
					</execution>
				</executions>
			</plugin>
		</plugins>
	</build>

</project>