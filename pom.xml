<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 https://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <parent>
    <groupId>org.springframework.boot</groupId>
    <artifactId>spring-boot-starter-parent</artifactId>
    <version>3.3.2</version>
    <relativePath></relativePath>
    <!-- lookup parent from repository -->
  </parent>
  <groupId>com.kcm.msp.dev</groupId>
  <artifactId>app2-development-parent-pom</artifactId>
  <version>${revision}</version>
  <packaging>pom</packaging>
  <name>app2-development-parent-pom</name>
  <description>Development parent pom</description>
  <properties>
    <revision>0.0.1-SNAPSHOT</revision>
    <java.version>21</java.version>
    <!-- dependencies -->
    <lombok.version>1.18.34</lombok.version>
    <commons-lang3.version>3.15.0</commons-lang3.version>
    <springdoc-openapi-starter-webmvc-ui.version>2.6.0</springdoc-openapi-starter-webmvc-ui.version>
    <springdoc-openapi-starter-webmvc-api.version>2.6.0</springdoc-openapi-starter-webmvc-api.version>
    <jakarta.validation-api.version>3.1.0</jakarta.validation-api.version>
    <jackson-databind-nullable.version>0.2.6</jackson-databind-nullable.version>
    <swagger-annotations.version>2.2.22</swagger-annotations.version>
    <!-- plugins-->
    <maven-compiler-plugin.version>3.13.0</maven-compiler-plugin.version>
    <spotless-maven-plugin.version>2.43.0</spotless-maven-plugin.version>
    <google-java-format.version>1.23.0</google-java-format.version>
    <maven-resources-plugin.version>3.3.1</maven-resources-plugin.version>
    <exec-maven-plugin.version>3.3.0</exec-maven-plugin.version>
    <spotbugs-maven-plugin.version>4.8.6.2</spotbugs-maven-plugin.version>
    <spotbugs.version>4.8.6</spotbugs.version>
    <openapi-generator-maven-plugin.version>7.7.0</openapi-generator-maven-plugin.version>
    <!-- properties for plugin-->
    <generate-openapi-server-code.inputSpec>${project.basedir}/src/main/resources/static/openapi/openapi.yaml</generate-openapi-server-code.inputSpec>
    <generate-openapi-server-code.reactive>false</generate-openapi-server-code.reactive>
    <generate-openapi-server-code.skip>false</generate-openapi-server-code.skip>
    <generate-openapi-client-code.skip>false</generate-openapi-client-code.skip>
    <generate-openapi-client-code.library>restclient</generate-openapi-client-code.library>
    <generate-openapi-client-code.inputSpec>${project.basedir}/src/main/resources/static/openapi/openapi.yaml</generate-openapi-client-code.inputSpec>
  </properties>

  <dependencyManagement>
    <dependencies>
      <!-- Common dependencies -->
      <dependency>
        <groupId>org.projectlombok</groupId>
        <artifactId>lombok</artifactId>
        <version>${lombok.version}</version>
      </dependency>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-ui</artifactId>
        <version>${springdoc-openapi-starter-webmvc-ui.version}</version>
      </dependency>
      <!-- use this springdoc-openapi if you dont want swagger-ui and only generate the API info in
      JSON & YAML formats -->
      <dependency>
        <groupId>org.springdoc</groupId>
        <artifactId>springdoc-openapi-starter-webmvc-api</artifactId>
        <version>${springdoc-openapi-starter-webmvc-api.version}</version>
      </dependency>
      <!-- dependencies for code generated by openapi-generator-maven-plugin -->
      <dependency>
        <groupId>jakarta.validation</groupId>
        <artifactId>jakarta.validation-api</artifactId>
        <version>${jakarta.validation-api.version}</version>
      </dependency>
      <dependency>
        <groupId>org.openapitools</groupId>
        <artifactId>jackson-databind-nullable</artifactId>
        <version>${jackson-databind-nullable.version}</version>
      </dependency>
      <dependency>
        <groupId>io.swagger.core.v3</groupId>
        <artifactId>swagger-annotations</artifactId>
        <version>${swagger-annotations.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>

  <build>
    <pluginManagement>
      <plugins>
        <!-- Java Compiler -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-compiler-plugin</artifactId>
          <version>${maven-compiler-plugin.version}</version>
          <configuration>
            <release>${java.version}</release>
            <source>${java.version}</source>
            <target>${java.version}</target>
          </configuration>
        </plugin>
        <!--  spotless code formatter plugin -->
        <plugin>
          <groupId>com.diffplug.spotless</groupId>
          <artifactId>spotless-maven-plugin</artifactId>
          <version>${spotless-maven-plugin.version}</version>
          <configuration>
            <skip>${spotless.skip}</skip>
            <markdown>
              <includes>
                <include>**/*.md</include>
              </includes>
              <excludes>
                <exclude>target/**/*</exclude>
                <exclude>CHANGELOG.md</exclude>
              </excludes>
              <flexmark></flexmark>
            </markdown>
            <pom>
              <includes>
                <include>pom.xml</include>
              </includes>
              <sortPom></sortPom>
            </pom>
            <java>
              <googleJavaFormat>
                <!-- google.github.io/styleguide/javaguide.html#s1-introduction -->
                <!--
                github.com/diffplug/spotless/tree/aa1a6665ef08b7c93bfa3fd745ecb67b0631771a/plugin-maven#java -->
                <version>${google-java-format.version}</version>
                <style>GOOGLE</style>
                <!-- Optional, available versions: GOOGLE, AOSP -->
                <reflowLongStrings>true</reflowLongStrings>
              </googleJavaFormat>
              <removeUnusedImports></removeUnusedImports>
            </java>
          </configuration>
          <executions>
            <execution>
              <id>spotless-check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>none</phase>
            </execution>
          </executions>
        </plugin>
        <!-- copy git hooks files from scripts/git-hooks to .git/hooks -->
        <plugin>
          <groupId>org.apache.maven.plugins</groupId>
          <artifactId>maven-resources-plugin</artifactId>
          <version>${maven-resources-plugin.version}</version>
          <executions>
            <execution>
              <id>copy-hooks</id>
              <goals>
                <goal>copy-resources</goal>
              </goals>
              <phase>none</phase>
              <configuration>
                <outputDirectory>${basedir}/.git/hooks</outputDirectory>
                <resources>
                  <resource>
                    <directory>${basedir}/scripts/git-hooks</directory>
                    <includes>
                      <include>**/*</include>
                    </includes>
                  </resource>
                </resources>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!-- make .git/hooks/commit-msg and .git/hooks/pre-commit executable -->
        <plugin>
          <groupId>org.codehaus.mojo</groupId>
          <artifactId>exec-maven-plugin</artifactId>
          <version>${exec-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>make-hooks-executable</id>
              <goals>
                <goal>exec</goal>
              </goals>
              <phase>none</phase>
              <configuration>
                <executable>chmod</executable>
                <arguments>
                  <argument>+x</argument>
                  <argument>${basedir}/.git/hooks/commit-msg</argument>
                  <argument>${basedir}/.git/hooks/pre-commit</argument>
                </arguments>
                <skip>${os.detected.classifier:windows}</skip>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!-- spotbugs plugin -->
        <plugin>
          <groupId>com.github.spotbugs</groupId>
          <artifactId>spotbugs-maven-plugin</artifactId>
          <version>${spotbugs-maven-plugin.version}</version>
          <configuration>
            <skip>${spotbugs.skip}</skip>
            <failOnError>true</failOnError>
            <!-- threshold values Low,Medium,High -->
            <threshold>High</threshold>
            <!-- TODO remove FindDeadLocalStores after ignoring spotbugs check on
						generated classes -->
            <!-- to disable bug detector. -->
            <omitVisitors>FindDeadLocalStores</omitVisitors>
          </configuration>
          <dependencies>
            <!-- overwrite if you want to specify the version of spotbugs -->
            <dependency>
              <groupId>com.github.spotbugs</groupId>
              <artifactId>spotbugs</artifactId>
              <version>${spotbugs.version}</version>
            </dependency>
          </dependencies>
          <executions>
            <execution>
              <id>spotbugs-check</id>
              <goals>
                <goal>check</goal>
              </goals>
              <phase>verify</phase>
            </execution>
          </executions>
        </plugin>
        <!-- openapi code generator -->
        <plugin>
          <groupId>org.openapitools</groupId>
          <artifactId>openapi-generator-maven-plugin</artifactId>
          <version>${openapi-generator-maven-plugin.version}</version>
          <executions>
            <execution>
              <id>generate-openapi-server-code</id>
              <goals>
                <goal>generate</goal>
              </goals>
              <configuration>
                <skip>${generate-openapi-server-code.skip}</skip>
                <!--<inputSpec>https://petstore3.swagger.io/api/v3/openapi.yaml</inputSpec>-->
                <inputSpec>${generate-openapi-server-code.inputSpec}</inputSpec>
                <generatorName>spring</generatorName>
                <library>spring-boot</library>
                <apiPackage>${project.groupId}.${generate-openapi-server-code.package}.api</apiPackage>
                <modelPackage>${project.groupId}.${generate-openapi-server-code.package}.models</modelPackage>
                <supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>
                <output>${project.build.directory}/generated-sources</output>
                <configOptions>
                  <useSpringBoot3>true</useSpringBoot3>
                  <reactive>${generate-openapi-server-code.reactive}</reactive>
                  <sourceFolder>src/main/java/</sourceFolder>
                  <delegatePattern>true</delegatePattern>
                  <interfaceOnly>true</interfaceOnly>
                  <useTags>true</useTags>
                  <!--<additionalModelTypeAnnotations>@lombok.Builder</additionalModelTypeAnnotations>-->
                </configOptions>
              </configuration>
            </execution>
            <execution>
              <id>generate-openapi-client-code</id>
              <goals>
                <goal>generate</goal>
              </goals>
              <configuration>
                <skip>${generate-openapi-client-code.skip}</skip>
                <inputSpec>${generate-openapi-client-code.inputSpec}</inputSpec>
                <generatorName>java</generatorName>
                <library>${generate-openapi-client-code.library}</library>
                <apiPackage>${project.groupId}.${generate-openapi-client-code.package}.api</apiPackage>
                <modelPackage>${project.groupId}.${generate-openapi-client-code.package}.models</modelPackage>
                <output>${project.build.directory}/generated-sources</output>
                <!-- set generateApis to 'false' to generate model classes only-->
                <generateApis>true</generateApis>
                <generateApiDocumentation>false</generateApiDocumentation>
                <generateApiTests>false</generateApiTests>
                <generateModels>true</generateModels>
                <generateModelDocumentation>false</generateModelDocumentation>
                <generateModelTests>false</generateModelTests>
                <!--<generateSupportingFiles>true</generateSupportingFiles>-->
                <!--<supportingFilesToGenerate>ApiUtil.java</supportingFilesToGenerate>-->
                <configOptions>
                  <useJakartaEe>true</useJakartaEe>
                  <sourceFolder>src/main/java</sourceFolder>
                  <useTags>true</useTags>
                  <interfaceOnly>true</interfaceOnly>
                  <dateLibrary>java8</dateLibrary>
                </configOptions>
                <!-- To override variables defined in spec. use ',' for passing multiple values -->
                <serverVariableOverrides>${generate-openapi-client-code.overrideServerVariables}</serverVariableOverrides>
              </configuration>
            </execution>
          </executions>
        </plugin>
        <!-- springboot -->
        <plugin>
          <groupId>org.springframework.boot</groupId>
          <artifactId>spring-boot-maven-plugin</artifactId>
          <executions>
            <!-- added to generate build-info.properties which is used by spring-actuator to populate endpoint '/actuator/info'  -->
            <execution>
              <goals>
                <goal>build-info</goal>
              </goals>
            </execution>
          </executions>
        </plugin>
      </plugins>
    </pluginManagement>
    <!-- Add plugins that needs to be executed automatically by child project -->
    <plugins>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>spotless-check</id>
            <phase>validate</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-resources-plugin</artifactId>
        <executions>
          <execution>
            <id>copy-hooks</id>
            <phase>initialize</phase>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <executions>
          <execution>
            <id>make-hooks-executable</id>
            <phase>generate-sources</phase>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>

</project>
